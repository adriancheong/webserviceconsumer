<link rel="stylesheet" href="~/css/docker.css" />

@{
    ViewData["Title"] = "Docker";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<div class="container">
    <img src="~/images/Docker Workflow.png" />
</div>

<br /><br /><hr /><br /><br />

<div class=WordSection1>

    <p class=MsoTitle><span lang=EN-SG>Docker Setup</span></p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            There are multiple ways to setup Docker.
            Use the one that you prefer.
        </span>
    </p>

    <p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            1)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Use a Cloud Provider to automatically provision
            a system with Docker Installed.
        </span>
    </p>

    <p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
        </span><span lang=EN-SG>Manually install Docker on a server you already have.</span>
    </p>

    <p class=MsoNormal><span lang=EN-SG>&nbsp;</span></p>

    <h1><span lang=EN-SG>Using a Cloud Provider</span></h1>

    <p class=MsoNormal>
        <span lang=EN-SG>
            Cloud Providers like Digital Ocean, AWS,
            and Azure can automatically specify Docker to be installed when you are
            provisioning a server. Just select the appropriate image during provisioning.
        </span>
    </p>

    <p class=MsoNormal>
        <img width=626 height=250 id="Picture 1"
             src="~/images/DockerInfo_files/image001.jpg">
    </p>

    <p class=MsoNormal><span lang=EN-SG>&nbsp;</span></p>

    <h1><span lang=EN-SG>Manual Installation</span></h1>

    <p class=MsoNormal>
        <span lang=EN-SG>
            Proceed to the Docker website for steps to
            install on your respective OS:<br>
        </span><a href="https://docs.docker.com/engine/installation/"><span lang=EN-SG>https://docs.docker.com/engine/installation/</span></a>
    </p>

    <p class=MsoNormal><span lang=EN-SG>&nbsp;</span></p>

    <p class=MsoTitle><span lang=EN-SG>Creating a Docker Swarm</span></p>

    <h1><span lang=EN-SG>Create Manager and Worker nodes</span></h1>

    <p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            1)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            In Digital Ocean, spin up three droplets, and
            name them manager, worker1 and worker2.
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            2)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Log in to all three boxes</span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            3)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Set up the manager server as the swarm manager:</span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG style='color:#767171'>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><i>
            <span lang=EN-SG style='color:#767171'>
                docker swarm init
                --advertise-addr &lt;manager ip&gt;
            </span>
        </i>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Note down the docker swarm join command to run
            in the workers.
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            4)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Set up the worker servers to join the swarm by
            running the docker swarm join command from the previous step:
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG style='font-size:8.0pt;line-height:107%;color:#767171'>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG style='font-size:8.0pt;line-height:107%'>
            e.g. <i>
                <span style='color:#767171'>docker swarm join \</span>
            </i>
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt'>
        <i>
            <span lang=EN-SG style='font-size:8.0pt;line-height:107%;color:#767171'>
                --token
                SWMTKN-1-1v5407jtlpxglufldmpugzpyu3rxpvvvtwtgv69jzq1vm4nhd5-3jg22tgs0wr0kx3dilwmn5nd9
                \
            </span>
        </i>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='text-indent:18.0pt'>
        <i>
            <span lang=EN-SG style='font-size:8.0pt;line-height:107%;color:#767171'>128.199.219.151:2377</span>
        </i>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'>
        <span lang=EN-SG>
            5)<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            In the manager, run the following command to see
            the workers and managers in the same swarm:
        </span>
    </p>

    <p class=MsoListParagraphCxSpLast>
        <i>
            <span lang=EN-SG style='color:#767171'>
                docker
                node ls
            </span>
        </i>
    </p>

    <h1><span lang=EN-SG>Run a service on the swarm (e.g. adder image)</span></h1>

    <p class=MsoNormal>
        <i>
            <span lang=EN-SG style='color:#767171'>
                docker service
                create --mode global --name &lt;service name&gt; --publish 5010:5010 &lt;docker
                image&gt;
            </span>
        </i>
    </p>

    <p class=MsoNormal>
        <i>
            <span lang=EN-SG style='color:#767171'>
                e.g<br>
                docker service create --mode global --name adder --publish 5010:5010
                adriancheong/adder
            </span>
        </i>
    </p>

    <h1><span lang=EN-SG>Monitor a service</span></h1>

    <p class=MsoNormal>
        <i>
            <span lang=EN-SG style='color:#767171'>
                docker service ps
                &lt;service name&gt;
            </span>
        </i>
    </p>

    <h1><span lang=EN-SG>Benefits of Docker Swarm</span></h1>

    <p class=MsoNormal>
        <span lang=EN-SG>
            Calls are automatically load balanced
            between workers (The balancing logic is unknown to me). If a worker goes down,
            calls are automatically routed to another active worker. (<b>
                You can simulate a
                node going down by just asking that worker to leave the swarm. But if it is a
                manager node, you can’t leave the swarm, so do a container stop to start
                ignoring requests
            </b>)
        </span>
    </p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            When a container goes down on a node, the
            rest of the workers take over while the manager attempts to <b>
                restart a new
                container on the affected node
            </b>. You can try this by spinning up multiple
            nodes and manually docker stop &lt;container&gt;. In a while you will see a new
            container being spun up automatically!
        </span>
    </p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            If a whole worker goes down in replica
            mode, it will spin up new containers on whatever active nodes it still has.
        </span>
    </p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            Global vs Replicas:<br>
            Global will always just be number of available workers<br>
            Replicas is a number of how many tasks you want to spawn up regardless of
            workers you have. Tasks will be split among all available workers.
        </span>
    </p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            The power of rolling updates – Docker Swarm
            handles the update/upgrade of images across all your nodes and staggers them
            with a delay that can be set as a param. See here:<br>
        </span><a href="https://docs.docker.com/engine/swarm/swarm-tutorial/rolling-update/">
            <span lang=EN-SG>https://docs.docker.com/engine/swarm/swarm-tutorial/rolling-update/</span>
        </a>
    </p>

    <p class=MsoNormal><span lang=EN-SG>&nbsp;</span></p>

    <p class=MsoNormal><span lang=EN-SG>&nbsp;</span></p>

    <p class=MsoTitle><span lang=EN-SG>Docker Swarm on Azure Container Services</span></p>

    <p class=MsoNormal>
        <span lang=EN-SG>
            Only 2 IPs should be exposed; the swarm
            master IP, and the swarm agents IP. The swarm agents should only have a single IP
            no matter how many agents there are, because they are behind a load balancer.
            Therefore the swarm agents IP is in fact the load balancer’s IP.
        </span>
    </p>

    <h1><span lang=EN-SG>Swarm Master</span></h1>

    <p class=MsoListParagraphCxSpFirst style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Responsible for running services on the agents</span>
    </p>

    <p class=MsoListParagraphCxSpLast style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            You connect to this via CLI to do all the main
            control panel work
        </span>
    </p>

    <h1><span lang=EN-SG>Swarm Agents</span></h1>

    <p class=MsoListParagraphCxSpFirst style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Responsible for running the containers</span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Are load balanced</span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Gets instructed by the Swarm Master
            automatically to run containers
        </span>
    </p>

    <p class=MsoListParagraphCxSpLast style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            You never need to connect to these agents via
            CLI
        </span>
    </p>

    <h1><span lang=EN-SG>Sample Steps</span></h1>

    <p class=MsoListParagraphCxSpFirst style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>Create an ACS on Azure.</span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Connect to ACS Swarm Master using Putty. <b>
                Note
                that the port is 2200, not 22.
            </b>
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Once connected, if you do a docker ps now, you should
            see 2 containers already running. These were automatically created by ACS. One of
            the containers should be the docker swarm itself. We need to connect to this
            swarm to run commands.
        </span>
    </p>

    <p class=MsoListParagraphCxSpLast style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Set up the Docker CLI to point to the running swarm
            cluster, instead of pointing to the Master itself, by running this command
            (This basically tells the Docker commands to run all commands on the currently
            running Docker Swarm container that is exposed on port 2375):
        </span>
    </p>

    <p class=MsoQuote><span lang=EN-SG>export DOCKER_HOST=:2375</span></p>

    <p class=MsoListParagraph style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Now do typical docker run commands to spin up
            your webservices e.g.
        </span>
    </p>

    <p class=MsoQuote><span lang=EN-SG>docker run -d -p 80:80 mywebserver</span></p>

    <p class=MsoListParagraphCxSpFirst style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Do a docker ps now, and you should see the
            webserver container running on one of the agents.
        </span>
    </p>

    <p class=MsoListParagraphCxSpMiddle style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            Depending on how many agents you configured at
            the creation of the ACS, you can create more webservers to be load balanced
            across all agents.
        </span>
    </p>

    <p class=MsoListParagraphCxSpLast style='margin-left:54.0pt;text-indent:-18.0pt'>
        <span lang=EN-SG>
            -<span style='font:7.0pt "Times New Roman"'>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </span>
        </span><span lang=EN-SG>
            In order to test the webserver that is now
            running, open a web browser and browse to the <b>
                swarm agent load balancer IP
                (Not the master’s IP)
            </b>. You should see your website running.
        </span>
    </p>

    <h1><span lang=EN-SG>Opening Ports on ACS (Default only 80, 8080 and 443 open)</span></h1>
    <a href="https://azure.microsoft.com/en-us/documentation/articles/container-service-enable-public-access/">Details here</a>

    <h1><span lang=EN-SG>Scaling out ACS VMs</span></h1>
    <b><span lang=EN-SG>Using GUI</span></b><br />
    <a href="https://msftstack.wordpress.com/2016/05/13/change-the-instance-count-of-an-azure-vm-scale-set/">Link Here</a>
    <br /><br />
    <b><span lang=EN-SG>Using Azure CLI</span></b>
    <p class=MsoQuote><span lang=EN-SG>docker run -it microsoft/azure-cli</span><br />
    <span lang=EN-SG>azure login</span><br />
    <span lang=EN-SG>azure vmss scale {resource-group} {name} {new-capacity}</span><br />
    <span lang=EN-SG>e.g. azure vmss scale AzureContainerService swarm-agent-6418D590-vmss 3</span></p>


    <br /><br /><br /><br />
    <p class=MsoTitle><span lang=EN-SG>Docker Swarm Load Test Results</span></p>
    <div class="container">
        <img src="~/images/single consumer.png" />
    </div>
    <hr />
    <div class="container">
        <img src="~/images/multiple consumer.png" />
    </div>


</div>


<script>
</script>